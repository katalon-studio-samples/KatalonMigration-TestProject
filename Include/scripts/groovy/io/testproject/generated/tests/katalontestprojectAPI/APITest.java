package io.testproject.generated.tests.katalontestprojectAPI;

import java.util.concurrent.TimeUnit;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.WebDriver;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import com.kms.katalon.core.webui.driver.DriverFactory;
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords;

import io.testproject.addon.JSONOperations;
import io.testproject.addon.RESTfulAPIClient;
//import io.testproject.sdk.drivers.ReportingDriver;
//import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
  /**
   * This class was automatically generated by TestProject
   * Project: Katalon Test Project
   * Test: API Test
   * Generated by: Mohit Kumar (mohit.kumar@katalon.com)
   * Generated on Mon Dec 05 12:24:04 GMT 2022.
   */
  @DisplayName("API Test")
  public class APITest {
    public static WebDriver driver;
    String serverResponse= "";
    String email="";
    String firstname="";
    String lastname="";

    @BeforeClass
    static void setup() throws Exception {
    	
    }

    /**
     * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
     * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
    @DisplayName("API Test")
    @ParameterizedTest
    @MethodSource("provideParameters")
    @Test
    void execute() throws Exception {
      // set timeout for driver actions (similar to step timeout)
      //driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
      boolean booleanResult;
      RESTfulAPIClient.GetAction getAction;
      JSONOperations.GetTenValuesFromJSON getTenValuesFromJSON;

      // 1. Navigate to '{{ApplicationURL}}'
      //    Navigates the specified URL (Auto-generated)
      /* Step is disabled
      try {
        GeneratedUtils.sleep(500);
        driver.navigate().to(ApplicationURL);
      }
      catch (AssertionError | RuntimeException ex) {
        getDriver().report().step("Step 'Navigate to '~?~ApplicationURL~?~'' failed", ex.getMessage(), false, false);
        // FailureBehaviorType is continue test in case of failure
      }
      */
      // 2. GET 'https://reqres.in/api/users?page=2'?'[NONE]'
      try {
        GeneratedUtils.sleep(500);
        getAction = RESTfulAPIClient.getAction("","","https://reqres.in/api/users?page=2","","","200","",false,"",false,"","");
        //getAction = (RESTfulAPIClient.GetAction)((ReportingDriver)driver).addons().execute(getAction);
        serverResponse = String.valueOf(getAction.response);
      }
      catch (AssertionError | RuntimeException ex) {
        //getDriver().report().step("Step 'GET 'https://reqres.in/api/users?page=2'?'[NONE]'' failed", ex.getMessage(), false, false);
        // FailureBehaviorType is continue test in case of failure
      }

      // 3. Extract multiple JsonPaths from '{{serverResponse}}'
      try {
        GeneratedUtils.sleep(500);
        getTenValuesFromJSON = JSONOperations.getTenValuesFromJSON(serverResponse,"data[0].email");
        //getTenValuesFromJSON = (JSONOperations.GetTenValuesFromJSON)((ReportingDriver)driver).addons().execute(getTenValuesFromJSON);
        email = String.valueOf(getTenValuesFromJSON.pathResultOne);
      }
      catch (AssertionError | RuntimeException ex) {
        //getDriver().report().step("Step 'Extract multiple JsonPaths from '~?~serverResponse~?~'' failed", ex.getMessage(), false, false);
        // FailureBehaviorType is continue test in case of failure
      }

      // 4. Extract multiple JsonPaths from '{{serverResponse}}'
      try {
        GeneratedUtils.sleep(500);
        getTenValuesFromJSON = JSONOperations.getTenValuesFromJSON(serverResponse,"data[0].first_name");
        
        //getTenValuesFromJSON = (JSONOperations.GetTenValuesFromJSON)((ReportingDriver)driver).addons().execute(getTenValuesFromJSON);
        firstname = String.valueOf(getTenValuesFromJSON.pathResultOne);
      }
      catch (AssertionError | RuntimeException ex) {
        //getDriver().report().step("Step 'Extract multiple JsonPaths from '~?~serverResponse~?~'' failed", ex.getMessage(), false, false);
        // FailureBehaviorType is continue test in case of failure
      }

      // 5. Extract multiple JsonPaths from '{{serverResponse}}'
      try {
        GeneratedUtils.sleep(500);
        getTenValuesFromJSON = JSONOperations.getTenValuesFromJSON(serverResponse,"data[0].last_name");
        //getTenValuesFromJSON = (JSONOperations.GetTenValuesFromJSON)((ReportingDriver)driver).addons().execute(getTenValuesFromJSON);
        lastname = String.valueOf(getTenValuesFromJSON.pathResultOne);
      }
      catch (AssertionError | RuntimeException ex) {
        //getDriver().report().step("Step 'Extract multiple JsonPaths from '~?~serverResponse~?~'' failed", ex.getMessage(), false, false);
        // FailureBehaviorType is continue test in case of failure
      }
    }

    @AfterClass
    static void tearDown() {
      if (driver != null) {
        driver.quit();
      }
    }
  }
